"""create models for brettmann lab solvents and polymers and link to those polymers and solvents in the crystal 16 data instead of just the general polymers and solvents

Revision ID: 1de5bc90ec88
Revises: 5eea21c6c65b
Create Date: 2023-03-09 12:25:43.231670

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '1de5bc90ec88'
down_revision = '5eea21c6c65b'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('brettmann_lab_polymers',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('pol_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['pol_id'], ['polymers.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('brettmann_lab_solvents',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('sol_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['sol_id'], ['solvents.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('brettmann_lab')
    op.add_column('csst_reactors', sa.Column('bret_sol_id', sa.Integer(), nullable=False))
    op.add_column('csst_reactors', sa.Column('bret_pol_id', sa.Integer(), nullable=False))
    op.drop_constraint('csst_reactors_pol_id_fkey', 'csst_reactors', type_='foreignkey')
    op.drop_constraint('csst_reactors_sol_id_fkey', 'csst_reactors', type_='foreignkey')
    op.create_foreign_key(None, 'csst_reactors', 'brettmann_lab_polymers', ['bret_pol_id'], ['id'])
    op.create_foreign_key(None, 'csst_reactors', 'brettmann_lab_solvents', ['bret_sol_id'], ['id'])
    op.drop_column('csst_reactors', 'sol_id')
    op.drop_column('csst_reactors', 'pol_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('csst_reactors', sa.Column('pol_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('csst_reactors', sa.Column('sol_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'csst_reactors', type_='foreignkey')
    op.drop_constraint(None, 'csst_reactors', type_='foreignkey')
    op.create_foreign_key('csst_reactors_sol_id_fkey', 'csst_reactors', 'solvents', ['sol_id'], ['id'])
    op.create_foreign_key('csst_reactors_pol_id_fkey', 'csst_reactors', 'polymers', ['pol_id'], ['id'])
    op.drop_column('csst_reactors', 'bret_pol_id')
    op.drop_column('csst_reactors', 'bret_sol_id')
    op.create_table('brettmann_lab',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('pol_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('sol_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['pol_id'], ['polymers.id'], name='brettman_lab_pol_id_fkey'),
    sa.ForeignKeyConstraint(['sol_id'], ['solvents.id'], name='brettman_lab_sol_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='brettman_lab_pkey'),
    sa.UniqueConstraint('name', name='brettman_lab_name_key'),
    sa.UniqueConstraint('pol_id', name='brettman_lab_pol_id_key'),
    sa.UniqueConstraint('sol_id', name='brettman_lab_sol_id_key')
    )
    op.drop_table('brettmann_lab_solvents')
    op.drop_table('brettmann_lab_polymers')
    # ### end Alembic commands ###

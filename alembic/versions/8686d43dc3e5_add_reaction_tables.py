"""add reaction tables

Revision ID: 8686d43dc3e5
Revises: 5c377f2a3595
Create Date: 2023-04-25 15:05:51.043445

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '8686d43dc3e5'
down_revision = '5c377f2a3595'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('reaction_procedures',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('reactions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('smarts', sa.Text(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('reference', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('reaction_polymer_mappings',
    sa.Column('reaction_procedure_id', sa.Integer(), nullable=False),
    sa.Column('chemical_id', sa.Integer(), nullable=False),
    sa.Column('pol_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['chemical_id'], ['chemicals.id'], ),
    sa.ForeignKeyConstraint(['pol_id'], ['polymers.id'], ),
    sa.ForeignKeyConstraint(['reaction_procedure_id'], ['reaction_procedures.id'], ),
    sa.PrimaryKeyConstraint('reaction_procedure_id', 'chemical_id', 'pol_id'),
    )
    op.create_unique_constraint('unique_reaction_polymer_mapping', 'reaction_polymer_mappings', ['pol_id', 'chemical_id', 'reaction_procedure_id'])

    op.create_table('reaction_steps',
    sa.Column('reaction_id', sa.Integer(), nullable=False),
    sa.Column('reaction_procedure_id', sa.Integer(), nullable=False),
    sa.Column('step', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['reaction_id'], ['reactions.id'], ),
    sa.ForeignKeyConstraint(['reaction_procedure_id'], ['reaction_procedures.id'], ),
    sa.PrimaryKeyConstraint('reaction_id', 'reaction_procedure_id', 'step'),
    )
    op.create_unique_constraint('unique_reaction_step', 'reaction_steps', ['reaction_procedure_id', 'reaction_id', 'step'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('reaction_steps')
    op.drop_table('reaction_polymer_mappings')
    op.drop_table('reactions')
    op.drop_table('reaction_procedures')
    # ### end Alembic commands ###
